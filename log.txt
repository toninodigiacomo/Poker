2025-06-23 22:04:08 UTC
macOS-15.5-arm64-arm-64bit
Ren'Py 8.3.4.24120703

Early init took 0.03s
Loading error handling took 0.03s
Loading script took 0.36s
Loading save slot metadata took 0.02s
Loading persistent took 0.00s
Running init code took 0.04s
Loading analysis data took 0.01s
Analyze and compile ATL took 0.00s
Reloading save slot metadata took 0.02s
Index archives took 0.00s
Backing up script files to '/Users/toninodigiacomo/Library/RenPy/backups/Poker':
Dump and make backups took 0.03s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc took 0.02s
DPI scale factor: 1.000000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.02s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.01s
Save screen analysis took 0.01s
Prepare screens took 0.04s
Save pyanalysis. took 0.01s
Save bytecode. took 0.02s
Running _start took 0.00s
Interface start took 2.36s

Initializing gl2 renderer:
primary display bounds: (0, 0, 3840, 2160)
swap interval: 1 frames
Windowed mode.
Vendor: "b'Apple'"
Renderer: b'Apple M1'
Version: b'2.1 Metal - 89.4'
Display Info: None
Screen sizes: virtual=(2560, 1440) physical=(2388, 1343) drawable=(2388, 1343)
Maximum texture size: 4096x4096
[DEBUG] ► Dealer defined for this round: robot
[DEBUG] ► Label LB_TEXAS_HOLDEM(Player,Computer,5,100)
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Player and Big Blind is Computer
[DEBUG] ► Player puts in the small blind of 5 chips 
[DEBUG] ► Computer puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Player
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 2C and 6S
[DEBUG] ► Pre-Flop start --► First to act: Player ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'fold'}
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Computer
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
Resetting cache.
Early init took 38.17s
Loading error handling took 0.02s
Loading script took 0.13s
Loading save slot metadata took 0.02s
Loading persistent took 0.00s
Running init code took 0.02s
Loading analysis data took 0.01s
Analyze and compile ATL took 0.00s
Reloading save slot metadata took 0.01s
Index archives took 0.00s
Backing up script files to '/Users/toninodigiacomo/Library/RenPy/backups/Poker':
Dump and make backups took 0.03s
Cleaning cache took 0.00s
Making clean stores took 0.00s
Initial gc took 0.03s
DPI scale factor: 1.000000
Creating interface object took 0.00s
Cleaning stores took 0.00s
Init translation took 0.03s
Build styles took 0.00s
Load screen analysis took 0.00s
Analyze screens took 0.01s
Save screen analysis took 0.01s
Prepare screens took 0.04s
Save pyanalysis. took 0.01s
Save bytecode. took 0.01s
Running _start took 0.00s
Interface start took 0.06s

Initializing gl2 renderer:
primary display bounds: (0, 0, 3840, 2160)
swap interval: 1 frames
Windowed mode.
Vendor: "b'Apple'"
Renderer: b'Apple M1'
Version: b'2.1 Metal - 89.4'
Display Info: None
Screen sizes: virtual=(2560, 1440) physical=(2388, 1343) drawable=(2388, 1343)
Maximum texture size: 4096x4096
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 7D and 2C
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: human
[DEBUG] ► Current dealer after change: robot
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Player and Big Blind is Computer
[DEBUG] ► Player puts in the small blind of 5 chips 
[DEBUG] ► Computer puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Player
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 8D and 6D
[DEBUG] ► Pre-Flop start --► First to act: Player ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'call', 'amount': 10}
[DEBUG] ► Current action: call --► Actual bet: 5
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : TC, AC, 7C
[DEBUG] ► Flop start --► First to act: Player
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'check'}
[DEBUG] ► Current action: check
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Flop : TC, AC, 7C
[DEBUG] ► Flop start --► First to act: Player
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : TC, AC, 7C
[DEBUG] ► Flop start --► First to act: Player
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'check'}
[DEBUG] ► Current action: check
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : TC, AC, 7C
[DEBUG] ► Flop start --► First to act: Player
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'bet', 'amount': 20}
[DEBUG] ► Current action: bet --► Last Raiser: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 20
[DEBUG] ► Current action: call --► Actual bet: 20
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Flop : TC, AC, 7C
[DEBUG] ► Flop start --► First to act: Player
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'bet', 'amount': 20}
[DEBUG] ► Current action: bet --► Last Raiser: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards KD and TC
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: human
[DEBUG] ► Current dealer after change: robot
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Player and Big Blind is Computer
[DEBUG] ► Player puts in the small blind of 5 chips 
[DEBUG] ► Computer puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Player
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards QD and 9H
[DEBUG] ► Pre-Flop start --► First to act: Player ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'raise', 'amount': 30}
[DEBUG] ► Current action: raise --► Last Raiser: Player ----► Current bet: 30
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 7D and JH
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 10
[DEBUG] ► Current action: call --► Actual bet: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : 3C, 8S, 9S
[DEBUG] ► Flop start --► First to act: Computer
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'check'}
[DEBUG] ► Current action: check
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Flop : 3C, 8S, 9S
[DEBUG] ► Flop start --► First to act: Computer
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'bet', 'amount': 20}
[DEBUG] ► Current action: bet --► Last Raiser: Player
[DEBUG] ► End of loop conditions: all_matched = False, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: human
[DEBUG] ► Current dealer after change: robot
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Player and Big Blind is Computer
[DEBUG] ► Player puts in the small blind of 5 chips 
[DEBUG] ► Computer puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Player
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 9H and 6S
[DEBUG] ► Pre-Flop start --► First to act: Player ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'fold'}
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Computer
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 6S and 6C
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: raise --► Robot total bet ammount: 30
[DEBUG] ► Current action: raise --► Last Raiser: Computer ----► Current bet: 30
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'raise', 'amount': 50}
[DEBUG] ► Current action: raise --► Last Raiser: Player ----► Current bet: 50
[DEBUG] ► End of loop conditions: all_matched = False, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: raise --► Robot total bet ammount: 60
[DEBUG] ► Current action: raise --► Last Raiser: Computer ----► Current bet: 60
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 10
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'raise', 'amount': 80}
[DEBUG] ► Current action: raise --► Last Raiser: Player ----► Current bet: 80
[DEBUG] ► End of loop conditions: all_matched = False, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 70
[DEBUG] ► Current action: call --► Actual bet: 10
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : 2S, TS, 5S
[DEBUG] ► Flop start --► First to act: Computer
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Street name: Turn
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 0, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Flop : 2S, TS, 5S
[DEBUG] ► Flop start --► First to act: Computer
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Street name: Turn
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 0, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Street name: Turn
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 0, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Street name: Turn
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 0, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 5D and JS
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards KC and AS
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: human
[DEBUG] ► Current dealer after change: robot
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Player and Big Blind is Computer
[DEBUG] ► Player puts in the small blind of 5 chips 
[DEBUG] ► Computer puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Player
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards AS and AD
[DEBUG] ► Pre-Flop start --► First to act: Player ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'raise', 'amount': 30}
[DEBUG] ► Current action: raise --► Last Raiser: Player ----► Current bet: 30
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: robot
[DEBUG] ► Current dealer after change: human
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 7D and 9H
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Computer
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Computer and Big Blind is Player
[DEBUG] ► Computer puts in the small blind of 5 chips 
[DEBUG] ► Player puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Computer
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards AH and 8D
[DEBUG] ► Pre-Flop start --► First to act: Computer ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 10
[DEBUG] ► Current action: call --► Actual bet: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: False
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : TC, QD, 5H
[DEBUG] ► Flop start --► First to act: Computer
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Computer
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: Bet --► Robot total bet ammount: 5
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'bet', 'amount': 20}
[DEBUG] ► Current action: bet --► Last Raiser: Player
[DEBUG] ► End of loop conditions: all_matched = False, len(players_who_acted_in_round) = 1, len(active_players) = 2
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: fold --► Robot total bet ammount: 0
[DEBUG] ► Current action: fold --► Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 1, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
[DEBUG] ► Pre-Flop end --► Round ended by fold: True
[DEBUG] ► Current dealer before change: human
[DEBUG] ► Current dealer after change: robot
[DEBUG] ► Label LB_START_NEW_HAND()
[DEBUG] ► While loop starting point
[DEBUG] ► Reset open cards
[DEBUG] ► Reset active players' cards
[DEBUG] ► Reset hands and folded status False
[DEBUG] ► Big bling = 10 --► Small Blind is Player and Big Blind is Computer
[DEBUG] ► Player puts in the small blind of 5 chips 
[DEBUG] ► Computer puts the big blind of 10 chips 
[DEBUG] ► First post-blinds player = Player
[DEBUG] ► The blinds have been bet. The pot is now 15 chips
[DEBUG] ► Your cards 6D and 6H
[DEBUG] ► Pre-Flop start --► First to act: Player ----► Big Blind: 10
[DEBUG] ► Street name: Pre-Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 5
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'raise', 'amount': 30}
[DEBUG] ► Current action: raise --► Last Raiser: Player ----► Current bet: 30
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 30
[DEBUG] ► Current action: call --► Actual bet: 20
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Flop : KH, AH, QH
[DEBUG] ► Flop start --► First to act: Player
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'bet', 'amount': 20}
[DEBUG] ► Current action: bet --► Last Raiser: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 15
[DEBUG] ► Current action: call --► Actual bet: 15
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Street name: Flop
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 2
[DEBUG] ► Player turn: Player
[DEBUG] ► Amount to match: 0
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Player --► Active players: 2
[DEBUG] ► Player Action Data: {'action': 'bet', 'amount': 20}
[DEBUG] ► Current action: bet --► Last Raiser: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► Amount to match: 20
[DEBUG] ► Needs to act: True
[DEBUG] ► Turn: Computer --► Active players: 2
[DEBUG] ► Robot action: call --► Robot total bet ammount: 15
[DEBUG] ► Current action: call --► Actual bet: 15
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 2, len(active_players) = 2
[DEBUG] ► Active players (2): 2
[DEBUG] ► Pre-Flop end --► Round ended by fold: False
[DEBUG] ► Street name: Turn
[DEBUG] ► First player: Player
[DEBUG] ► Active players (1): 1
[DEBUG] ► Round ended early by fold. Active players: 1
[DEBUG] ► Player turn: Player
[DEBUG] ► Player turn: Computer
[DEBUG] ► End of loop conditions: all_matched = True, len(players_who_acted_in_round) = 0, len(active_players) = 1
[DEBUG] ► Active players (2): 1
[DEBUG] ► Winner: Player
